!function(){"use strict";angular.module("ui.toggle",[]).value("$toggleSuppressError",!1).constant("toggleConfig",{btnCheckboxFalse:!1,btnCheckboxTrue:!0,on:"On",off:"Off",size:"",onClass:"btn-primary",onstyle:"",offClass:"btn-default",offstyle:"",toggleStyle:"",toggleClass:"",style:"",width:"",height:"",disabled:!1}).controller("ToggleController",["$scope","$attrs","$interpolate","$log","$document","toggleConfig","$toggleSuppressError",function(e,l,t,n,a,o,s){var r=this,i=Object.keys(o);angular.forEach(i,function(n,a){if(angular.isDefined(l[n]))switch(typeof o[n]){case"string":r[n]=t(l[n])(e.$parent);break;case"function":break;default:r[n]=e.$parent.$eval(l[n])}else r[n]=o[n]}),r.onstyle&&(r.onClass=r.onstyle),r.offstyle&&(r.offClass=r.offstyle),r.style&&(r.toggleClass=r.style),""===r.on&&(r.on="&nbsp;"),""===r.off&&(r.off="&nbsp;"),this.evaluateSize=function(){if(!r.width||!r.height){var e=r.onElement.cloneNode(!0);e.style.position="absolute",e.style.display="block",e.style.visibility="hidden",e.style.border="0",e.style.margin="0",a[0].body.appendChild(e);var l=r.offElement.cloneNode(!0);l.style.position="absolute",l.style.display="block",l.style.visibility="hidden",l.style.border="0",l.style.margin="0",a[0].body.appendChild(l),r.width||(r.width=Math.max(e.scrollWidth,l.scrollWidth)+2+"px"),r.height||(r.height=Math.max(e.scrollHeight,l.scrollHeight)+2+"px"),a[0].body.removeChild(e),a[0].body.removeChild(l)}},this.init=function(){var t=r.element.find("label"),n=r.element.find("span"),a=r.element.find("div");r.wrapperElement=a[0],r.onElement=t[0],r.offElement=t[1],r.handleElement=n[0];var o=angular.element(r.onElement);o.html(r.on),angular.element(r.offElement).html(r.off),angular.element(r.wrapperElement).addClass(r.size),o.addClass(r.size),angular.element(r.offElement).addClass(r.size),angular.element(r.handleElement).addClass(r.size),angular.element(r.wrapperElement).addClass(r.toggleClass),angular.element(r.onElement).addClass(r.onClass),angular.element(r.offElement).addClass(r.offClass),r.evaluateSize(),angular.element(r.onElement).addClass("toggle-on"),angular.element(r.offElement).addClass("toggle-off"),r.computeStyle(),r.ngModelCtrl.$render=function(){r.toggle()},angular.isDefined(l.ngChange)&&r.ngModelCtrl.$viewChangeListeners.push(function(){e.$eval(l.ngChange)})},this.computeStyle=function(){angular.element(r.onElement).attr("disabled",r.disabled),angular.element(r.offElement).attr("disabled",r.disabled),angular.element(r.handleElement).attr("disabled",r.disabled),e.wrapperStyle=r.toggleStyle?e.$parent.$eval(r.toggleStyle):{},e.wrapperStyle.width=r.width,e.wrapperStyle.height=r.height},this.toggle=function(){r.ngModelCtrl.$viewValue?angular.element(r.wrapperElement).removeClass("off "+r.offClass).addClass(r.onClass):angular.element(r.wrapperElement).addClass("off "+r.offClass).removeClass(r.onClass)},e.onSwitch=function(e){return!r.disabled&&(r.ngModelCtrl.$setViewValue(!r.ngModelCtrl.$viewValue),r.ngModelCtrl.$render(),!0)},angular.forEach(i,function(e,t){l.$observe(e,function(l){r[e]!==l&&(r[e]=l,r.computeStyle())})})}]).directive("toggle",function(){return{restrict:"E",template:'<div ng-cloak class="toggle btn off" ng-style="wrapperStyle"ng-click="onSwitch($event)"><div class="toggle-group"><label class="btn toggle-on-pad"></label><label class="btn toggle-off-pad active"></label><span class="btn btn-default toggle-handle"></span></div></div>',scope:{ngModel:"="},require:["toggle","ngModel"],controller:"ToggleController",controllerAs:"toggle",compile:function(e,l,t){return{post:function(e,l,t,n){var a=n[0];a.element=l,a.ngModelCtrl=n[1],a.init()},pre:function(){}}}}})}();